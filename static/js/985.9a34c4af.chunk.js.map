{"version":3,"file":"static/js/985.9a34c4af.chunk.js","mappings":"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","sources":["pages/Contacts/Contacts.styled.js","components/ContactForm/ContactForm.styled.js","redux/Contact/selectors.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const PhoneTitle = styled.h1`\n  text-align: center;\n  text-transform: uppercase;\n  color: rgba(66, 131, 109, 0.911);\n  margin: 0;\n  font-size: 32px;\n`;\n\nexport const Loader = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport const MessageUser = styled.p`\n  text-align: center;\n  font-family: Segoe UI;\n  font-weight: 500;\n  font-size: 20px;\n  color: teal;\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 400px;\n\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.2), 0 16px 20px rgba(0, 0, 0, 0.2);\n  padding: 20px;\n  background-color: rgba(133, 228, 196, 0.247);\n`;\n\nexport const Box = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  gap: 15px;\n  border: 1px solid grey;\n  border-radius: 4px;\n  height: 180px;\n  display: flex;\n  flex-direction: column;\n  padding: 20px;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3), 0 0 30px rgba(0, 0, 0, 0.1) inset;\n  margin-bottom: 20px;\n  margin-top: 10px;\n`;\n\nexport const Button = styled.button`\n  border: 1px solid rgb(73, 104, 104);\n  height: 30px;\n  align-self: center;\n  border-radius: 5px;\n  margin-top: 10px;\n  cursor: pointer;\n  transition: background-color 200ms linear;\n  color: rgb(73, 104, 104);\n  &:hover,\n  &:focus {\n    background-color: teal;\n    color: white;\n  }\n`;\n\nexport const LabelForm = styled.label`\n  display: flex;\n  gap: 3px;\n  flex-direction: column;\n  font-family: Cambria;\n  font-weight: 700;\n  font-size: 18px;\n  color: #5e5e5e;\n`;\n\nexport const InputForm = styled.input`\n  color: #5e5e5e;\n  height: 25px;\n  font-family: Cambria;\n  font-weight: 400;\n  font-size: 18px;\n  border: none;\n  outline: 1px solid gray;\n  border-radius: 5px;\n  &:focus {\n    outline: 2px solid teal;\n  }\n`;\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getFilterValue = state => state.filter;\nexport const getContactsValue = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const getAllContacts = createSelector([getContactsValue, getFilterValue], (contacts, filter) => {\n    return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n    )\n});\n","import { useState } from 'react';\nimport shortid from 'shortid';\nimport { Form, Button, InputForm, LabelForm } from './ContactForm.styled';\nimport { addContact } from '../../redux/Contact/operations';\nimport { getContactsValue } from 'redux/Contact/selectors';\nimport { useSelector, useDispatch } from 'react-redux';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(getContactsValue);\n\n  const dispatch = useDispatch();\n  const id = shortid.generate();\n\n  const createContact = ({ name, number }) => ({\n    id: id,\n    name,\n    number,\n  });\n\n  const addContactToState = contact => dispatch(addContact(contact));\n\n  const handleInputChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const userName = contacts.find(\n      user => user.name.toLocaleLowerCase() === name.toLowerCase()\n    );\n    if (userName) {\n      alert(`${name} is already in contacs`);\n    } else {\n      addContactToState(createContact({ name, number }));\n      reset();\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <LabelForm>\n        Name\n        <InputForm\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          title=\"Name may contain only letters\"\n          required\n          onChange={handleInputChange}\n        />\n      </LabelForm>\n\n      <LabelForm>\n        Number\n        <InputForm\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          title=\"Phone may contain only digits\"\n          required\n          onChange={handleInputChange}\n        />\n      </LabelForm>\n      <Button type=\"submit\"> Add contact </Button>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const LabelFilter = styled.label`\n  font-size: 16px;\n  text-align: center;\n  display: block;\n  color: #5e5e5e;\n`;\n\nexport const InputFilter = styled.input`\n  color: #5e5e5e;\n  display: block;\n  border: 1px solid rgba(33, 33, 33, 0.3);\n  border-radius: 4px;\n  height: 25px;\n  width: 80%;\n  font-size: 16px;\n  margin: 10px auto;\n  margin-bottom: 20px;\n  &:focus {\n    outline-color: teal;\n  }\n`;\n\nexport const Container = styled.div`\n  border: 1px solid grey;\n  border-radius: 4px;\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  box-shadow: 0 1px 4px rgba(0, 0, 0, 0.3), 0 0 30px rgba(0, 0, 0, 0.1) inset;\n  margin-bottom: 10px;\n  margin-top: 10px;\n`;\n","import { LabelFilter, InputFilter, Container } from './Filter.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilterValue } from 'redux/Contact/selectors';\nimport { setFilter } from 'redux/Contact/filterSlice';\n\nexport const Filter = () => {\n  const filterValue = useSelector(getFilterValue);\n  const dispatch = useDispatch();\n\n  return (\n    <Container>\n      <LabelFilter>Find contacts by name</LabelFilter>\n\n      <InputFilter\n        type=\"text\"\n        value={filterValue}\n        name=\"filter\"\n        onChange={e => dispatch(setFilter(e.target.value))}\n      />\n    </Container>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding: 10px;\n  list-style: none;\n  justify-content: center;\n  margin: 0;\n  max-height: 150px;\n  width: 95%;\n  overflow-y: auto;\n  overflow-x: hidden;\n  margin: 0 auto;\n`;\n\nexport const Item = styled.li`\n  padding: 3px;\n  display: flex;\n  justify-content: space-between;\n  align-items: baseline;\n  width: 95%;\n  margin: 5px;\n  gap: 15px;\n  height: 20px;\n  margin: 0 auto;\n`;\n\nexport const Button = styled.button`\n  padding: 2px 10px;\n  border-radius: 4px;\n  border: 1px solid rgb(73, 104, 104);\n  margin-left: auto;\n  cursor: pointer;\n  transition: background-color 200ms linear;\n  color: rgb(73, 104, 104);\n  &:active,\n  &:hover,\n  &:focus {\n    background-color: teal;\n    color: white;\n    border-color: trasparent;\n  }\n`;\n\nexport const Name = styled.span`\n  font-size: 14px;\n  color: rgb(32, 37, 37);\n`;\n\nexport const Number = styled.span`\n  font-weight: 400;\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: rgb(54, 92, 126);\n`;\n","import { List, Item, Button, Name, Number } from './ContactList.styled';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/Contact/operations';\nimport { getAllContacts } from 'redux/Contact/selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(getAllContacts);\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <List>\n        {contacts.map(({ name, id, number }) => {\n          return (\n            <Item key={id}>\n                  <Name>{name} :</Name>\n                  <Number>{number}</Number>\n              <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n                Delete\n              </Button>\n            </Item>\n          );\n        })}\n      </List>\n    </>\n  );\n};\n","import {\n  PhoneTitle,\n  Loader,\n  MessageUser,\n  Container,\n  Box,\n} from './Contacts.styled';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { Filter } from '../../components/Filter/Filter';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useEffect } from 'react';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { fetchContacts } from '../../redux/Contact/operations';\nimport {\n  getAllContacts,\n  selectError,\n  selectIsLoading,\n} from '../../redux/Contact/selectors';\n\nexport default function Contacts() {\n  const contacts = useSelector(getAllContacts);\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box>\n      <Container>\n        <PhoneTitle>Phonebook</PhoneTitle>\n        <ContactForm />\n        <PhoneTitle>Contacts</PhoneTitle>\n        <Filter />\n        {isLoading && !error ? (\n          <Loader>\n            <ThreeDots />\n          </Loader>\n        ) : (\n          <ContactList />\n        )}\n        {!contacts.length && (\n          <MessageUser>There are no contacts in the Phonebook</MessageUser>\n        )}\n      </Container>\n    </Box>\n  );\n}\n"],"names":["PhoneTitle","styled","Loader","MessageUser","Container","Box","Form","Button","LabelForm","InputForm","getFilterValue","state","filter","getContactsValue","contacts","items","selectIsLoading","isLoading","selectError","error","getAllContacts","createSelector","contact","name","toLowerCase","includes","ContactForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","id","shortid","handleInputChange","e","currentTarget","value","reset","onSubmit","preventDefault","find","user","toLocaleLowerCase","alert","createContact","addContact","type","title","required","onChange","LabelFilter","InputFilter","Filter","filterValue","setFilter","target","List","Item","Name","Number","ContactList","map","onClick","deleteContact","Contacts","useEffect","fetchContacts","length"],"sourceRoot":""}